def jacobi(a,b,ans,initial):
  x1 = initial[0]
  x2 = initial[1]
  x3 = initial[2]
  i = 0
  x = np.array([x1,x2,x3]).reshape((3,1))
  table = pd.DataFrame(columns=['Iteration','x1','x2','x3','Error'])
  ans = ans.reshape((3,1))
  err = abs(ans[0] - x[0]) + abs(ans[1] - x[1]) + abs(ans[2] - x[2])
  table.loc[i] = [i+1,round(x1,4),round(x2,4),round(x3,4),round(err[0],4)]
  while(True):
    X1 = (b[0] - a[0][1]*x2 - a[0][2]*x3)/a[0][0]
    X2 = (b[1] - a[1][0]*x1 - a[1][2]*x3)/a[1][1]
    X3 = (b[2] - a[2][1]*x2 - a[2][0]*x1)/a[2][2]
    x1 = X1
    x2 = X2
    x3 = X3
    x = np.array([x1,x2,x3]).reshape((3,1))
    b1 = b.reshape((3,1))
    t = np.matmul(a,x) - b1 
    err = abs(ans[0] - x[0]) + abs(ans[1] - x[1]) + abs(ans[2] - x[2])
    i = i+1
    table.loc[i] = [i+1,round(x1,4),round(x2,4),round(x3,4),round(err[0],4)]
    
    if(abs(t[0]) < 0.0001 and abs(t[1]) < 0.0001 and abs(t[2]) < 0.0001):
      break
  return table, round(x1,3) , round(x2,3) , round(x3,3)
